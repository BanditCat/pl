////////////////////////////////////////////////////////////////////////////////
//     Copyright (c) Jon DuBois 2022. This file is part of pseudoluminal.     //
//                                                                            //
// This program is free software: you can redistribute it and/or modify       //
// it under the terms of the GNU Affero General Public License as published   //
// by the Free Software Foundation, either version 3 of the License, or       //
// (at your option) any later version.                                        //
//                                                                            //
// This program is distributed in the hope that it will be useful,            //
// but WITHOUT ANY WARRANTY; without even the implied warranty of             //
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              //
// GNU Affero General Public License for more details.                        //
//                                                                            //
// You should have received a copy of the GNU Affero General Public License   //
// along with this program.  If not, see <https://www.gnu.org/licenses/>.     //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////
// Compute shader.                                                            //
////////////////////////////////////////////////////////////////////////////////

#version 460


struct particle{
  vec3 pos;
  vec3 vel;
  float color;
  float mass;
};
layout(std140, binding = 1) buffer oparticleBuffer{
  particle ops[];
};
layout(std140, binding = 2) buffer iparticleBuffer{
  particle ips[];
};


void main(){
  ops[ gl_GlobalInvocationID.x ].pos =
    ips[ gl_GlobalInvocationID.x ].pos + vec3 ( 0.001, 0.001, 0.001 );
}
 
